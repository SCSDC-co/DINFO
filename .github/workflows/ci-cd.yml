name: Run builds and deploy/create release

on:
    push:
        tags:
            - "v*"

jobs:
    build-linux-windows:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Restore dependencies
              run: dotnet restore ./src/tui/dinfo.tui.csproj

            # --- Self-Contained build ---
            - name: Publish Self-Contained Linux Package
              run: |
                  dotnet publish ./src/tui/dinfo.tui.csproj \
                    -c Release \
                    -r linux-x64 \
                    --self-contained true \
                    /p:PublishSingleFile=false \
                    -o publish/self-contained/linux-x64

                  mv publish/self-contained/linux-x64/dinfo \
                  dinfo-linux-x64-self-contained

            - name: Publish Self-Contained Windows Package
              run: |
                  dotnet publish ./src/tui/dinfo.tui.csproj \
                    -c Release \
                    -r win-x64 \
                    --self-contained true \
                    /p:PublishSingleFile=true \
                    -o publish/self-contained/win-x64

                  mv publish/self-contained/win-x64/dinfo.exe \
                  dinfo-win-x64-self-contained.exe

            - name: Create ZIP for Linux
              run: zip -r dinfo-linux-x64-self-contained.zip dinfo-linux-x64-self-contained

            - name: Upload Linux Artifacts
              uses: actions/upload-artifact@v4.6.2
              with:
                  name: dinfo-linux
                  path: dinfo-linux-x64-self-contained*

            - name: Upload Windows Artifacts
              uses: actions/upload-artifact@v4.6.2
              with:
                  name: dinfo-win
                  path: dinfo-win-x64-self-contained.*

            - name: Edit installer files
              run: |
                  export GIT_TAG=$(git describe --tags)
                  sed "s/VERSION_BASE/${GIT_TAG:1}/" InstallerFiles/package.wxs.base | tee InstallerFiles/package.wxs

            - name: Create AUR PKGBUILD
              run: |
                  export GIT_TAG=$(git describe --tags)
                  export ZIP_SHA=$(sha256sum dinfo-linux-x64-self-contained.zip  | cut -d' ' -f1)
                  git log --pretty="# Maintainer: %an <%ae>" | sort -u | sed '/^#/!d' | tee aur-deploy/PKGBUILD
                  sed -i "s/VERSION_BASE/${GIT_TAG:1}/" aur-deploy/PKGBUILD.base
                  sed -i "s/ZIP_SHA_BASE/${ZIP_SHA:1}/" aur-deploy/PKGBUILD.base
                  cat aur-deploy/PKGBUILD.base >> aur-deploy/PKGBUILD

            - name: Upload Installer Scripts from repo
              uses: actions/upload-artifact@v4.6.2
              with:
                  name: wix-script
                  path: InstallerFiles

            - name: Upload AUR Files from repo
              uses: actions/upload-artifact@v4.6.2
              with:
                  name: aur-files
                  path: aur-deploy

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ github.ref_name }}
                  release_name: Release ${{ github.ref_name }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    release-linux:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        needs: build-linux-windows
        steps:
            - name: Download build
              uses: actions/download-artifact@v4.3.0
              with:
                  name: dinfo-linux

            - name: Upload Release Assets
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      dinfo-linux-x64-self-contained
                      dinfo-linux-x64-self-contained.zip
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    release-windows:
        runs-on: windows-latest
        needs:
            - build-linux-windows
        permissions:
            contents: write
        steps:
            - name: Download build
              uses: actions/download-artifact@v4.3.0
              with:
                  name: dinfo-win

            - name: Copy program to dinfo file
              run: |
                  cp dinfo-win-x64-self-contained.exe dinfo.exe

            - name: Download WiX Script
              uses: actions/download-artifact@v5.0.0
              with:
                  name: wix-script

            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                  dotnet-version: "9.0.x"

            - name: Build installer
              run: dotnet build --configuration Release

            - name: Move installer
              run: mv bin/Release/win-installer.msi .

            - name: Create ZIP
              run: Compress-Archive dinfo-win-x64-self-contained* dinfo-win.zip


            - name: Upload Release Assets
              uses: softprops/action-gh-release@v1
              with:
                  files: |
                      dinfo-win.zip
                      win-installer.msi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    deploy-aur:
        runs-on: ubuntu-latest
        needs:
          - build-linux-windows
          - release-linux
        steps:
            - name: Download AUR Files
              uses: actions/download-artifact@v4.3.0
              with:
                  name: aur-files
                  
            - name: Publish AUR package
              uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
              with:
                  pkgname: dinfo
                  pkgbuild: ./PKGBUILD
                  commit_username: ${{ secrets.AUR_USERNAME }}
                  commit_email: ${{ secrets.AUR_EMAIL }}
                  ssh_private_key: ${{ secrets.AUR_SSH_PRIVKEY }}
                  commit_message: Update AUR package
                  ssh_keyscan_types: rsa,ecdsa,ed25519
